# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- develop

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Build
    jobs:
      - job: BuildLinux
        displayName: Linux
        pool:
          vmImage: "ubuntu-18.04"

        strategy:
          matrix:
            ReleaseBuild:
              BuildType: Release
              CMakeArgs: -DCMAKE_BUILD_TYPE=Release
            DebugBuild:
              BuildType: Debug
              CMakeArgs: -DCMAKE_BUILD_TYPE=Debug

        steps:
        - task: CMake@1
          inputs:
            cmakeArgs: $(CMakeArgs) ..
          displayName: ConfigureLinux
        - task: CMake@1
          inputs:
            cmakeArgs: --build . --target install --config $(BuildType)
          displayName: BuildLinux

      - job: BuildWindows
        displayName: windows
        pool:
          vmImage: "windows-2019"
        strategy:
          matrix:
            ReleaseBuild:
              BuildType: Release
              CMakeArgs: -DCMAKE_BUILD_TYPE=Release
            DebugBuild:
              BuildType: Debug
              CMakeArgs: -DCMAKE_BUILD_TYPE=Debug
        steps:
        - task: CMake@1
          inputs:
            cmakeArgs: $(CMakeArgs) ..
          displayName: ConfigureWindows
        - task: CMake@1
          inputs:
            cmakeArgs: --build . --target install --config $(BuildType)
          displayName: Buildwindows

      - job: BuildMac      
        displayName: mac
        pool:
          vmImage: "macOS-10.15"

        strategy:
          matrix:
            ReleaseBuild:
              BuildType: Release
              CMakeArgs: -DCMAKE_BUILD_TYPE=Release
            DebugBuild:
              BuildType: Debug
              CMakeArgs: -DCMAKE_BUILD_TYPE=Debug

        steps:
        - task: CMake@1
          inputs:
            cmakeArgs: $(CMakeArgs) ..
          displayName: ConfigureMac
        - task: CMake@1
          inputs:
            cmakeArgs: --build . --target install --config $(BuildType)
          displayName: BuildMac
